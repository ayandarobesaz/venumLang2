// func int strlen(str string) {
//     int index = 0;
//     while(string[index] > 0) {
//         index += 1;
//     }

//     return index;
// }



// func int printline(str string) {
//     int length = strlen(string);
//     int result = syscall 1 1, string, length;
//     syscall 1 1, "\n", 1;
//     return result;
// }

// func int printstring(str string) {
//     int length = strlen(string);
//     int result = syscall 1 1, string, length;
//     return result;
// }


// func bool strcomp(str str1, str str2) {
//     int length1 = strlen(str1);
//     int length2 = strlen(str2);
//     if(length1 != length2) {
//         return false;
//     } 
//     for(int i = 0; i < length1; i += 1) {
//         if(str1[i] != str2[i]) {
//             return false;
//         }
//     }
//     return true;
// }


// func bool chop_by_char(byte st[], byte delim, byte nth_seen) {
//     int length = strlen(st);
//     for(int i = 0; i < length; i += 1) {
//         if(st[i] == delim) {
//             nth_seen = nth_seen - 1;
//             if(nth_seen == 0) {
//                 st[i] = 0;
//                 return true;
//             }
            
//         }
//     }
//     return false;
// }

// // create a socket
// func int socket(int arg1, int arg2, int arg3) {
//     int result = syscall 41 arg1, arg2, arg3;
//     return result;
// }

// func int bind(int fd, int ptr, int size) {
//     int result = syscall 49 fd, ptr, size;
//     return result;
// }

// func int listen(int fd, int backlog) {
//     int result = syscall 50 fd, backlog;
//     return result;
// }

// func int accept(int fd, int ptr, int size) {
//     int result = syscall 43 fd, ptr, size;
//     return result;
// }


// func int exit(int status) {
//     return syscall 60 status;
// }

// // reads data from fd
// func int read(int fd, int ptr, int size) {
//     int result = syscall 0 fd, ptr, size;
//     return result;
// }

// func int close(int fd) {
//     int result = syscall 6 fd;
//     return result;
// }

// func int send_to_client(int fd, str content) {
//     int length = strlen(content);
//     int result = syscall 1 fd, content, length;
//     return result;
// }


// // server data
// short AF_INET = 2;
// short PORT = 16415;
// int INADDR_ANY = 0;
// int SOCK_STREAM = 1;

// int length = 16;
// int newsock;


// int sersock = socket(AF_INET, SOCK_STREAM, 0);
// printstring("fd is: ");
// print sersock;

// if(bind(sersock, &AF_INET, 16) < 0) {
//     printline("bind error");
//     exit(1);
// } 
// if(listen(sersock, 1) < 0) {
//     printline("listen error");
//     exit(1);
// }

// if((newsock = accept(sersock, &AF_INET, &length)) < 0) {
//     printline("accept error");
//     exit(1);
// } else {
//     printline("accepted");
// }
    
//     byte buffer[1024];
//     int result = read(newsock, buffer, 1024);
//     chop_by_char(buffer, ' ', 2);
//     printline(buffer);
//     // send web response
//     send_to_client(newsock, "HTTP/1.1 200 OK\r\n");
//     send_to_client(newsock, "Server: Go-http-server\r\n");
//     send_to_client(newsock, "Content-Length: 88\r\n");
//     send_to_client(newsock, "Content-Type: text/html\r\n");
//     send_to_client(newsock, "Connection: Closed\r\n");
//     send_to_client(newsock, "\r\n");
//     send_to_client(newsock, "<h1>Hello World!</h1>\r\n");

// close(sersock);


